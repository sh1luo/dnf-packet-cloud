// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.4
// source: packet.proto

package packet

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "packet_cloud/biz/model/api"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UserPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty" form:"id" query:"id"`
	Name       string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty" form:"name" query:"name"`
	Content    string `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty" form:"content" query:"content"`
	Size       int32  `protobuf:"varint,4,opt,name=size,proto3" json:"size,omitempty" form:"size" query:"size"`
	SendTiming string `protobuf:"bytes,5,opt,name=send_timing,json=sendTiming,proto3" json:"send_timing,omitempty" form:"send_timing" query:"send_timing"`
}

func (x *UserPacket) Reset() {
	*x = UserPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packet_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserPacket) ProtoMessage() {}

func (x *UserPacket) ProtoReflect() protoreflect.Message {
	mi := &file_packet_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserPacket.ProtoReflect.Descriptor instead.
func (*UserPacket) Descriptor() ([]byte, []int) {
	return file_packet_proto_rawDescGZIP(), []int{0}
}

func (x *UserPacket) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UserPacket) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UserPacket) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *UserPacket) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *UserPacket) GetSendTiming() string {
	if x != nil {
		return x.SendTiming
	}
	return ""
}

type CloudPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int32         `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty" form:"id" query:"id"`
	Region      string        `protobuf:"bytes,2,opt,name=region,proto3" json:"region,omitempty" form:"region" query:"region"`
	Name        string        `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty" form:"name" query:"name"`
	Channel     string        `protobuf:"bytes,4,opt,name=channel,proto3" json:"channel,omitempty" form:"channel" query:"channel"`
	Uploader    string        `protobuf:"bytes,5,opt,name=uploader,proto3" json:"uploader,omitempty" form:"uploader" query:"uploader"`
	Time        string        `protobuf:"bytes,6,opt,name=time,proto3" json:"time,omitempty" form:"time" query:"time"`
	UserPackets []*UserPacket `protobuf:"bytes,7,rep,name=user_packets,json=userPackets,proto3" json:"user_packets,omitempty" form:"user_packets" query:"user_packets"`
}

func (x *CloudPacket) Reset() {
	*x = CloudPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packet_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloudPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloudPacket) ProtoMessage() {}

func (x *CloudPacket) ProtoReflect() protoreflect.Message {
	mi := &file_packet_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloudPacket.ProtoReflect.Descriptor instead.
func (*CloudPacket) Descriptor() ([]byte, []int) {
	return file_packet_proto_rawDescGZIP(), []int{1}
}

func (x *CloudPacket) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CloudPacket) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *CloudPacket) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CloudPacket) GetChannel() string {
	if x != nil {
		return x.Channel
	}
	return ""
}

func (x *CloudPacket) GetUploader() string {
	if x != nil {
		return x.Uploader
	}
	return ""
}

func (x *CloudPacket) GetTime() string {
	if x != nil {
		return x.Time
	}
	return ""
}

func (x *CloudPacket) GetUserPackets() []*UserPacket {
	if x != nil {
		return x.UserPackets
	}
	return nil
}

type UploadPacketReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CloudPacket *CloudPacket `protobuf:"bytes,1,opt,name=cloud_packet,json=cloudPacket,proto3" json:"cloud_packet,omitempty" form:"cloud_packet" query:"cloud_packet"`
}

func (x *UploadPacketReq) Reset() {
	*x = UploadPacketReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packet_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadPacketReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadPacketReq) ProtoMessage() {}

func (x *UploadPacketReq) ProtoReflect() protoreflect.Message {
	mi := &file_packet_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadPacketReq.ProtoReflect.Descriptor instead.
func (*UploadPacketReq) Descriptor() ([]byte, []int) {
	return file_packet_proto_rawDescGZIP(), []int{2}
}

func (x *UploadPacketReq) GetCloudPacket() *CloudPacket {
	if x != nil {
		return x.CloudPacket
	}
	return nil
}

type UploadPacketResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty" form:"code" query:"code"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty" form:"msg" query:"msg"`
}

func (x *UploadPacketResp) Reset() {
	*x = UploadPacketResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packet_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadPacketResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadPacketResp) ProtoMessage() {}

func (x *UploadPacketResp) ProtoReflect() protoreflect.Message {
	mi := &file_packet_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadPacketResp.ProtoReflect.Descriptor instead.
func (*UploadPacketResp) Descriptor() ([]byte, []int) {
	return file_packet_proto_rawDescGZIP(), []int{3}
}

func (x *UploadPacketResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *UploadPacketResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type ListPacketReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Time     string `protobuf:"bytes,1,opt,name=time,proto3" json:"time,omitempty" form:"time" query:"time"`
	Username string `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty" form:"username" query:"username"`
}

func (x *ListPacketReq) Reset() {
	*x = ListPacketReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packet_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPacketReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPacketReq) ProtoMessage() {}

func (x *ListPacketReq) ProtoReflect() protoreflect.Message {
	mi := &file_packet_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPacketReq.ProtoReflect.Descriptor instead.
func (*ListPacketReq) Descriptor() ([]byte, []int) {
	return file_packet_proto_rawDescGZIP(), []int{4}
}

func (x *ListPacketReq) GetTime() string {
	if x != nil {
		return x.Time
	}
	return ""
}

func (x *ListPacketReq) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

type ListPacketResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code         int32          `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty" form:"code" query:"code"`
	Msg          string         `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty" form:"msg" query:"msg"`
	CloudPackets []*CloudPacket `protobuf:"bytes,3,rep,name=cloud_packets,json=cloudPackets,proto3" json:"cloud_packets,omitempty" form:"cloud_packets" query:"cloud_packets"`
}

func (x *ListPacketResp) Reset() {
	*x = ListPacketResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packet_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPacketResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPacketResp) ProtoMessage() {}

func (x *ListPacketResp) ProtoReflect() protoreflect.Message {
	mi := &file_packet_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPacketResp.ProtoReflect.Descriptor instead.
func (*ListPacketResp) Descriptor() ([]byte, []int) {
	return file_packet_proto_rawDescGZIP(), []int{5}
}

func (x *ListPacketResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ListPacketResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *ListPacketResp) GetCloudPackets() []*CloudPacket {
	if x != nil {
		return x.CloudPackets
	}
	return nil
}

type GetPacketByIDReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Time     string `protobuf:"bytes,1,opt,name=time,proto3" json:"time,omitempty" form:"time" query:"time"`
	Username string `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty" form:"username" query:"username"`
	Id       int32  `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty" form:"id" query:"id"`
}

func (x *GetPacketByIDReq) Reset() {
	*x = GetPacketByIDReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packet_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPacketByIDReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPacketByIDReq) ProtoMessage() {}

func (x *GetPacketByIDReq) ProtoReflect() protoreflect.Message {
	mi := &file_packet_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPacketByIDReq.ProtoReflect.Descriptor instead.
func (*GetPacketByIDReq) Descriptor() ([]byte, []int) {
	return file_packet_proto_rawDescGZIP(), []int{6}
}

func (x *GetPacketByIDReq) GetTime() string {
	if x != nil {
		return x.Time
	}
	return ""
}

func (x *GetPacketByIDReq) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *GetPacketByIDReq) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetPacketByIDResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty" form:"code" query:"code"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty" form:"msg" query:"msg"`
	//repeated UserPacket user_packets = 3;
	UserPackets string `protobuf:"bytes,3,opt,name=user_packets,json=userPackets,proto3" json:"user_packets,omitempty" form:"user_packets" query:"user_packets"`
}

func (x *GetPacketByIDResp) Reset() {
	*x = GetPacketByIDResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packet_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPacketByIDResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPacketByIDResp) ProtoMessage() {}

func (x *GetPacketByIDResp) ProtoReflect() protoreflect.Message {
	mi := &file_packet_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPacketByIDResp.ProtoReflect.Descriptor instead.
func (*GetPacketByIDResp) Descriptor() ([]byte, []int) {
	return file_packet_proto_rawDescGZIP(), []int{7}
}

func (x *GetPacketByIDResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetPacketByIDResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetPacketByIDResp) GetUserPackets() string {
	if x != nil {
		return x.UserPackets
	}
	return ""
}

type DeletePacketReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	From int32 `protobuf:"varint,1,opt,name=from,proto3" json:"from,omitempty" form:"from" query:"from"`
	To   int32 `protobuf:"varint,2,opt,name=to,proto3" json:"to,omitempty" form:"to" query:"to"`
}

func (x *DeletePacketReq) Reset() {
	*x = DeletePacketReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packet_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletePacketReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePacketReq) ProtoMessage() {}

func (x *DeletePacketReq) ProtoReflect() protoreflect.Message {
	mi := &file_packet_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePacketReq.ProtoReflect.Descriptor instead.
func (*DeletePacketReq) Descriptor() ([]byte, []int) {
	return file_packet_proto_rawDescGZIP(), []int{8}
}

func (x *DeletePacketReq) GetFrom() int32 {
	if x != nil {
		return x.From
	}
	return 0
}

func (x *DeletePacketReq) GetTo() int32 {
	if x != nil {
		return x.To
	}
	return 0
}

type DeletePacketResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty" form:"code" query:"code"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty" form:"msg" query:"msg"`
}

func (x *DeletePacketResp) Reset() {
	*x = DeletePacketResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packet_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletePacketResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePacketResp) ProtoMessage() {}

func (x *DeletePacketResp) ProtoReflect() protoreflect.Message {
	mi := &file_packet_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePacketResp.ProtoReflect.Descriptor instead.
func (*DeletePacketResp) Descriptor() ([]byte, []int) {
	return file_packet_proto_rawDescGZIP(), []int{9}
}

func (x *DeletePacketResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *DeletePacketResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type MCloudPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int32         `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty" form:"id" query:"id"`
	Region      string        `protobuf:"bytes,2,opt,name=region,proto3" json:"region,omitempty" form:"region" query:"region"`
	Name        string        `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty" form:"name" query:"name"`
	Channel     []string      `protobuf:"bytes,4,rep,name=channel,proto3" json:"channel,omitempty" form:"channel" query:"channel"`
	Uploader    string        `protobuf:"bytes,5,opt,name=uploader,proto3" json:"uploader,omitempty" form:"uploader" query:"uploader"`
	Time        string        `protobuf:"bytes,6,opt,name=time,proto3" json:"time,omitempty" form:"time" query:"time"`
	UserPackets []*UserPacket `protobuf:"bytes,7,rep,name=user_packets,json=userPackets,proto3" json:"user_packets,omitempty" form:"user_packets" query:"user_packets"`
}

func (x *MCloudPacket) Reset() {
	*x = MCloudPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packet_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MCloudPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MCloudPacket) ProtoMessage() {}

func (x *MCloudPacket) ProtoReflect() protoreflect.Message {
	mi := &file_packet_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MCloudPacket.ProtoReflect.Descriptor instead.
func (*MCloudPacket) Descriptor() ([]byte, []int) {
	return file_packet_proto_rawDescGZIP(), []int{10}
}

func (x *MCloudPacket) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MCloudPacket) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *MCloudPacket) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MCloudPacket) GetChannel() []string {
	if x != nil {
		return x.Channel
	}
	return nil
}

func (x *MCloudPacket) GetUploader() string {
	if x != nil {
		return x.Uploader
	}
	return ""
}

func (x *MCloudPacket) GetTime() string {
	if x != nil {
		return x.Time
	}
	return ""
}

func (x *MCloudPacket) GetUserPackets() []*UserPacket {
	if x != nil {
		return x.UserPackets
	}
	return nil
}

type MUploadAllChannelsPacketReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	McloudPacket *MCloudPacket `protobuf:"bytes,1,opt,name=mcloud_packet,json=mcloudPacket,proto3" json:"mcloud_packet,omitempty" form:"mcloud_packet" query:"mcloud_packet"`
}

func (x *MUploadAllChannelsPacketReq) Reset() {
	*x = MUploadAllChannelsPacketReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packet_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MUploadAllChannelsPacketReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MUploadAllChannelsPacketReq) ProtoMessage() {}

func (x *MUploadAllChannelsPacketReq) ProtoReflect() protoreflect.Message {
	mi := &file_packet_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MUploadAllChannelsPacketReq.ProtoReflect.Descriptor instead.
func (*MUploadAllChannelsPacketReq) Descriptor() ([]byte, []int) {
	return file_packet_proto_rawDescGZIP(), []int{11}
}

func (x *MUploadAllChannelsPacketReq) GetMcloudPacket() *MCloudPacket {
	if x != nil {
		return x.McloudPacket
	}
	return nil
}

type MUploadAllChannelsPacketResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty" form:"code" query:"code"`
	Msg  string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty" form:"msg" query:"msg"`
}

func (x *MUploadAllChannelsPacketResp) Reset() {
	*x = MUploadAllChannelsPacketResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packet_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MUploadAllChannelsPacketResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MUploadAllChannelsPacketResp) ProtoMessage() {}

func (x *MUploadAllChannelsPacketResp) ProtoReflect() protoreflect.Message {
	mi := &file_packet_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MUploadAllChannelsPacketResp.ProtoReflect.Descriptor instead.
func (*MUploadAllChannelsPacketResp) Descriptor() ([]byte, []int) {
	return file_packet_proto_rawDescGZIP(), []int{12}
}

func (x *MUploadAllChannelsPacketResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *MUploadAllChannelsPacketResp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

var File_packet_proto protoreflect.FileDescriptor

var file_packet_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04,
	0x75, 0x73, 0x65, 0x72, 0x1a, 0x09, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x7f, 0x0a, 0x0a, 0x55, 0x73, 0x65, 0x72, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73,
	0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12,
	0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x69, 0x6e, 0x67, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x69, 0x6e, 0x67,
	0x22, 0xc8, 0x01, 0x0a, 0x0b, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64,
	0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64,
	0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x33, 0x0a, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x70,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0b,
	0x75, 0x73, 0x65, 0x72, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x22, 0x47, 0x0a, 0x0f, 0x55,
	0x70, 0x6c, 0x6f, 0x61, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x12, 0x34,
	0x0a, 0x0c, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x43, 0x6c, 0x6f, 0x75,
	0x64, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0b, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x50, 0x61,
	0x63, 0x6b, 0x65, 0x74, 0x22, 0x38, 0x0a, 0x10, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x50, 0x61,
	0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x3f,
	0x0a, 0x0d, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74,
	0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x22,
	0x6e, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x36, 0x0a, 0x0d, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x5f, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x65,
	0x74, 0x52, 0x0c, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x22,
	0x52, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x42, 0x79, 0x49, 0x44,
	0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x5c, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74,
	0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x21,
	0x0a, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74,
	0x73, 0x22, 0x35, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x65,
	0x74, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x74, 0x6f, 0x22, 0x38, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d,
	0x73, 0x67, 0x22, 0xc9, 0x01, 0x0a, 0x0c, 0x4d, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x50, 0x61, 0x63,
	0x6b, 0x65, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x70, 0x6c,
	0x6f, 0x61, 0x64, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x70, 0x6c,
	0x6f, 0x61, 0x64, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x33, 0x0a, 0x0c, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x50, 0x61, 0x63, 0x6b, 0x65,
	0x74, 0x52, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x22, 0x56,
	0x0a, 0x1b, 0x4d, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x41, 0x6c, 0x6c, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x73, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x12, 0x37, 0x0a,
	0x0d, 0x6d, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x4d, 0x43, 0x6c, 0x6f,
	0x75, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0c, 0x6d, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x22, 0x44, 0x0a, 0x1c, 0x4d, 0x55, 0x70, 0x6c, 0x6f, 0x61,
	0x64, 0x41, 0x6c, 0x6c, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x50, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x32, 0xde, 0x03, 0x0a,
	0x0d, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x54,
	0x0a, 0x0c, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x15,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x50, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x55, 0x70, 0x6c,
	0x6f, 0x61, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x15, 0xd2,
	0xc1, 0x18, 0x11, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x2f, 0x75, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x12, 0x4c, 0x0a, 0x0a, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x12, 0x13, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x61,
	0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x14, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x13, 0xca,
	0xc1, 0x18, 0x0f, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x2f, 0x6c, 0x69,
	0x73, 0x74, 0x12, 0x58, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x42,
	0x79, 0x49, 0x44, 0x12, 0x16, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61,
	0x63, 0x6b, 0x65, 0x74, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x42, 0x79, 0x49, 0x44,
	0x52, 0x65, 0x73, 0x70, 0x22, 0x16, 0xca, 0xc1, 0x18, 0x12, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x61,
	0x63, 0x6b, 0x65, 0x74, 0x2f, 0x67, 0x65, 0x74, 0x2f, 0x3a, 0x69, 0x64, 0x12, 0x54, 0x0a, 0x0c,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x15, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74,
	0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x15, 0xe2, 0xc1, 0x18,
	0x11, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x2f, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x12, 0x79, 0x0a, 0x18, 0x4d, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x41, 0x6c, 0x6c,
	0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x21,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x4d, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x41, 0x6c, 0x6c,
	0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65,
	0x71, 0x1a, 0x22, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x4d, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64,
	0x41, 0x6c, 0x6c, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x50, 0x61, 0x63, 0x6b, 0x65,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x16, 0xd2, 0xc1, 0x18, 0x12, 0x2f, 0x76, 0x31, 0x2f, 0x70,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x2f, 0x6d, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x42, 0x25, 0x5a,
	0x23, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x2f, 0x62, 0x69,
	0x7a, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x68, 0x65, 0x72, 0x74, 0x7a, 0x2f, 0x70, 0x61,
	0x63, 0x6b, 0x65, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_packet_proto_rawDescOnce sync.Once
	file_packet_proto_rawDescData = file_packet_proto_rawDesc
)

func file_packet_proto_rawDescGZIP() []byte {
	file_packet_proto_rawDescOnce.Do(func() {
		file_packet_proto_rawDescData = protoimpl.X.CompressGZIP(file_packet_proto_rawDescData)
	})
	return file_packet_proto_rawDescData
}

var file_packet_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_packet_proto_goTypes = []interface{}{
	(*UserPacket)(nil),                   // 0: user.UserPacket
	(*CloudPacket)(nil),                  // 1: user.CloudPacket
	(*UploadPacketReq)(nil),              // 2: user.UploadPacketReq
	(*UploadPacketResp)(nil),             // 3: user.UploadPacketResp
	(*ListPacketReq)(nil),                // 4: user.ListPacketReq
	(*ListPacketResp)(nil),               // 5: user.ListPacketResp
	(*GetPacketByIDReq)(nil),             // 6: user.GetPacketByIDReq
	(*GetPacketByIDResp)(nil),            // 7: user.GetPacketByIDResp
	(*DeletePacketReq)(nil),              // 8: user.DeletePacketReq
	(*DeletePacketResp)(nil),             // 9: user.DeletePacketResp
	(*MCloudPacket)(nil),                 // 10: user.MCloudPacket
	(*MUploadAllChannelsPacketReq)(nil),  // 11: user.MUploadAllChannelsPacketReq
	(*MUploadAllChannelsPacketResp)(nil), // 12: user.MUploadAllChannelsPacketResp
}
var file_packet_proto_depIdxs = []int32{
	0,  // 0: user.CloudPacket.user_packets:type_name -> user.UserPacket
	1,  // 1: user.UploadPacketReq.cloud_packet:type_name -> user.CloudPacket
	1,  // 2: user.ListPacketResp.cloud_packets:type_name -> user.CloudPacket
	0,  // 3: user.MCloudPacket.user_packets:type_name -> user.UserPacket
	10, // 4: user.MUploadAllChannelsPacketReq.mcloud_packet:type_name -> user.MCloudPacket
	2,  // 5: user.PacketService.UploadPacket:input_type -> user.UploadPacketReq
	4,  // 6: user.PacketService.ListPacket:input_type -> user.ListPacketReq
	6,  // 7: user.PacketService.GetPacketByID:input_type -> user.GetPacketByIDReq
	8,  // 8: user.PacketService.DeletePacket:input_type -> user.DeletePacketReq
	11, // 9: user.PacketService.MUploadAllChannelsPacket:input_type -> user.MUploadAllChannelsPacketReq
	3,  // 10: user.PacketService.UploadPacket:output_type -> user.UploadPacketResp
	5,  // 11: user.PacketService.ListPacket:output_type -> user.ListPacketResp
	7,  // 12: user.PacketService.GetPacketByID:output_type -> user.GetPacketByIDResp
	9,  // 13: user.PacketService.DeletePacket:output_type -> user.DeletePacketResp
	12, // 14: user.PacketService.MUploadAllChannelsPacket:output_type -> user.MUploadAllChannelsPacketResp
	10, // [10:15] is the sub-list for method output_type
	5,  // [5:10] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_packet_proto_init() }
func file_packet_proto_init() {
	if File_packet_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_packet_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packet_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloudPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packet_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadPacketReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packet_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadPacketResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packet_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPacketReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packet_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPacketResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packet_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPacketByIDReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packet_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPacketByIDResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packet_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeletePacketReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packet_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeletePacketResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packet_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MCloudPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packet_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MUploadAllChannelsPacketReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packet_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MUploadAllChannelsPacketResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_packet_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_packet_proto_goTypes,
		DependencyIndexes: file_packet_proto_depIdxs,
		MessageInfos:      file_packet_proto_msgTypes,
	}.Build()
	File_packet_proto = out.File
	file_packet_proto_rawDesc = nil
	file_packet_proto_goTypes = nil
	file_packet_proto_depIdxs = nil
}
